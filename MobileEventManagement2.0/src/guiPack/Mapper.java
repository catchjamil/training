

package guiPack;
import javax.swing.*;
import java.awt.*;
import JavaLib.*;
import java.awt.image.BufferedImage;

/**
 *
 * 
 */
public class Mapper extends javax.swing.JDialog {
    CompilePresentation parentWindow;
    int currentLocation;
    
    BufferedImage bi;
    BufferedImage biOriginal;
    Graphics2D g2d;
    
    /** Creates new form Mapper */
    public Mapper(java.awt.Frame parent, boolean modal, CompilePresentation parentWindow, String msg) {
        super(parent, modal);
        this.parentWindow = parentWindow;
        
        initComponents();
        
        Dimension sd  = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(sd.width / 2 - this.getWidth()/ 2, sd.height / 2 - this.getHeight()/ 2);        
        
        jLabelSelect.setText(msg);

        bi = new BufferedImage(500, 500, BufferedImage.TYPE_INT_RGB);
        biOriginal = new BufferedImage(500, 500, BufferedImage.TYPE_INT_RGB);
        g2d = bi.createGraphics();
        g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        try {
            Image image = Toolkit.getDefaultToolkit().getImage(parentWindow.parent.mps.presentationFolderPath + "\\" + parentWindow.currentIndex + ".jpg");
            MediaTracker mediaTracker = new MediaTracker(new Container());
            mediaTracker.addImage(image, 0);
            mediaTracker.waitForID(0);
            g2d.drawImage(image, 0, 0, 500, 500, null);
            biOriginal.getGraphics().drawImage(image, 0, 0, 500, 500, null);
        }catch(Exception e) {
            System.out.println("Exception Loading Image: " + e);
        }

        jLabelBase.setIcon(new ImageIcon(bi));
        
        jComboDestination.removeAllItems();
        jComboDestination.addItem("SELECT");
        for(int i=1;i<=parentWindow.mapCount;i++)
            jComboDestination.addItem("" + i);
        
        int startIndex = parentWindow.currentIndex * 80;
        String str="";
        currentLocation = -1;
        for(int i=startIndex;i<startIndex+80;i++)
        {
            str += parentWindow.mapDescription[i] + "\n";
            if(i%4==0 && parentWindow.mapDescription[i].equals("0") && currentLocation==-1)
            {
                currentLocation = ((i-startIndex) / 4);
            }
        }
        jTextMap.setText(str);
        System.out.println("Current Location: " + currentLocation);
        
        setResizable(false);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        new LoadForm();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelSelect = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabelBase = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboDestination = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextMap = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextDescription = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton1.setText("NEXT >>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("PRESENTATION CREATOR ");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelSelect.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelSelect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSelect.setText("jLabel2");
        jLabelSelect.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabelBase.setBackground(new java.awt.Color(51, 51, 51));
        jLabelBase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgPack/default_base.JPG"))); // NOI18N
        jLabelBase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jLabelBase);

        jButton2.setText("CANCEL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(" Select Destination Slide ");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jComboDestination.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("MAP FILE");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextMap.setColumns(20);
        jTextMap.setEditable(false);
        jTextMap.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
        jTextMap.setRows(5);
        jTextMap.setText("map file descriptor");
        jScrollPane2.setViewportView(jTextMap);

        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("UNDO");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Target Description");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton5.setText("PREVIOUS <<");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("VISUALIZE COORDINATES");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Only Menu Based Slide (Selected)");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabelSelect, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane2)
                            .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jComboDestination, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jCheckBox1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jTextDescription)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {jButton3, jButton4}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabelSelect)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboDestination, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jCheckBox1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextDescription, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton6))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton4)
                    .add(jButton3)
                    .add(jButton5)
                    .add(jButton1)
                    .add(jButton2))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
// TODO add your handling code here:
        if(jCheckBox1.isSelected())
            parentWindow.lockDescription[parentWindow.currentIndex] = "1"; // lock free navigation...
        else
            parentWindow.lockDescription[parentWindow.currentIndex] = "0";
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
// TODO add your handling code here:
        Graphics g = jLabelBase.getGraphics();
        g.setColor(new Color(255,100,100));
        int startIndex = parentWindow.currentIndex * 80;
        for(int i=startIndex;i<startIndex+80;i+=4)
        {
            int x = Integer.parseInt(parentWindow.mapDescription[i]);
            int y = Integer.parseInt(parentWindow.mapDescription[i+1]);
            String desc = parentWindow.mapDescription[i+2] + ":" + parentWindow.mapDescription[i+3];

            System.out.println(x + " : " + y + " : " + desc);
            if(x==0)
                break;
            g.drawLine(x-4,y-4,x+4,y+4);
            g.drawLine(x-4,y+4,x+4,y-4);
            g.drawString(desc,x+5,y+10);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
// TODO add your handling code here:
        if(parentWindow.currentIndex!=0) {
            parentWindow.currentIndex -= 2;
            setVisible(false);
        }
        else {
            System.out.println("Already On First Slide!");
            new MessageBox(parentWindow,"Already On First Slide!").setVisible(true);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
        
        currentLocation = 0;
        int startIndex = parentWindow.currentIndex * 80;
        for(int i=startIndex;i<startIndex+80;i++) {
            parentWindow.mapDescription[i] = "0";
        }
        
        // set map text
        String str="";
        for(int i=startIndex;i<startIndex+80;i++) {
            str += parentWindow.mapDescription[i] + "\n";
        }
        jTextMap.setText(str);
        
        refreshMapImage();
        
        new MessageBox(parentWindow,"Current Map Descriptor Cleared!").setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
        if(currentLocation!=0)
        {
            currentLocation--;
            int startIndex = parentWindow.currentIndex * 80;
            parentWindow.mapDescription[startIndex + (currentLocation*4) + 0] = "0";
            parentWindow.mapDescription[startIndex + (currentLocation*4) + 1] = "0";
            parentWindow.mapDescription[startIndex + (currentLocation*4) + 2] = "0";
            parentWindow.mapDescription[startIndex + (currentLocation*4) + 3] = "0";
            
            // set map text
            String str="";
            for(int i=startIndex;i<startIndex+80;i++) {
                str += parentWindow.mapDescription[i] + "\n";
            }
            jTextMap.setText(str);
        }
        refreshMapImage();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabelBaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBaseMouseClicked
// TODO add your handling code here:
        
        if(jComboDestination.getSelectedIndex() == 0) {
            System.out.println("Please Select A Valid Destination.");
            new MessageBox(parentWindow,"Please select a valid destination.").setVisible(true);
            return;
        }
        
        int dest = jComboDestination.getSelectedIndex() - 1;
        if(dest == parentWindow.currentIndex) {
            new MessageBox(parentWindow,"Please Set Pointer To Some Location Other Than Current One.").setVisible(true);
            return;
        }
        
        if(jTextDescription.getText().equals(""))
        {
            MessageBox mb = new MessageBox(parentWindow, "No Description Entered! Proceed?");
            mb.setVisible(true);
            if(!mb.ok) {
                return;
            }
            jTextDescription.setText("NA"); // when no description available
        }
        
        if(currentLocation == 19)
        {
            new MessageBox(parentWindow,"Maximum Pointers For Current Slide Set").setVisible(true);
            return;
        }
        
        int startIndex = parentWindow.currentIndex * 80;

        parentWindow.mapDescription[startIndex + (currentLocation*4) + 0] = "" + evt.getX();
        parentWindow.mapDescription[startIndex + (currentLocation*4) + 1] = "" + evt.getY();
        parentWindow.mapDescription[startIndex + (currentLocation*4) + 2] = "" + jTextDescription.getText();
        parentWindow.mapDescription[startIndex + (currentLocation*4) + 3] = "" + dest;
        currentLocation++;
        
        // set map text
        String str="";
        for(int i=startIndex;i<startIndex+80;i++) {
            str += parentWindow.mapDescription[i] + "\n";
        }
        jTextMap.setText(str);
        
        refreshMapImage();
        
    }//GEN-LAST:event_jLabelBaseMouseClicked

    public void refreshMapImage() {

        // refresh image
        bi.setRGB(0, 0, 500, 500, biOriginal.getRGB(0, 0, 500, 500, null, 0, 500), 0, 500);
        
        // redraws map.
        g2d.setColor(new Color(100, 255, 100));
        g2d.setFont(new Font("ARIAL",Font.BOLD,16));
        int startIndex = parentWindow.currentIndex * 80;
        for(int i=startIndex;i<startIndex+80;i+=4)
        {
            int x = Integer.parseInt(parentWindow.mapDescription[i]);
            int y = Integer.parseInt(parentWindow.mapDescription[i+1]);
            
            String desc = "";
            if(parentWindow.mapDescription[i+2].equals("NA")) {
                desc = " [" + parentWindow.mapDescription[i+3] + "]";
            }else {
                desc = parentWindow.mapDescription[i+2] + " [" + parentWindow.mapDescription[i+3] + "]";
            }
            System.out.println(x + " : " + y + " : " + desc);
            if(x==0) {
                break;
            }
            g2d.drawLine(x-4,y-4,x+4,y+4);
            g2d.drawLine(x-4,y+4,x+4,y-4);
            //g2d.drawString(desc,x+5,y+10);
            g2d.drawString(desc,x+5,y+5);
        }
        jLabelBase.repaint();
        
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
        parentWindow.currentIndex = parentWindow.mapCount + 2;
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboDestination;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelBase;
    private javax.swing.JLabel jLabelSelect;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextDescription;
    private javax.swing.JTextArea jTextMap;
    // End of variables declaration//GEN-END:variables
    
}
